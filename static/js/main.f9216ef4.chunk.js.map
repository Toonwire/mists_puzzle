{"version":3,"sources":["assets/LeafEmpty.png","assets/LeafFull.png","assets/CircledLeafEmpty.png","assets/CircledLeafFull.png","assets/FlowerEmpty.png","assets/FlowerFull.png","assets/CircledFlowerEmpty.png","assets/CircledFlowerFull.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","symbolMap","LeafEmpty","LeafFull","CircledLeafEmpty","CircledLeafFull","FlowerEmpty","FlowerFull","CircledFlowerEmpty","CircledFlowerFull","validCombinations","k_combinations","set","k","i","j","combs","head","tailcombs","length","push","slice","concat","Object","keys","forEach","combGroup","combSet","map","comb","split","attrStr","Number","candidateIndex","candidates","attrIndex","attrCol","attrSum","reduce","sum","attrVal","findIndex","combination","data","img","uniqueIndex","Status","msg","useStyles","makeStyles","theme","margin","maxWidth","symbolContainer","display","width","height","minWidth","minHeight","borderRadius","cursor","score","color","highlightScale","transform","MistSymbol","props","classes","src","onClick","withMist","useState","hovered","setHovered","Box","className","bgcolor","onMouseEnter","onMouseLeave","alt","hidden","App","randomCombinationSet","setRandomCombinationSet","setScore","status","setStatus","setWithMist","useEffect","Math","floor","random","timeout","setTimeout","clearTimeout","flexDirection","p","style","backgroundColor","Grid","container","spacing","justify","symbol","index","item","key","handleClick","alignItems","m","Alert","severity","Typography","variant","FormGroup","row","FormControlLabel","label","control","Switch","checked","onChange","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f9216ef4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LeafEmpty.a38170c5.png\";","module.exports = __webpack_public_path__ + \"static/media/LeafFull.e50c0522.png\";","module.exports = __webpack_public_path__ + \"static/media/CircledLeafEmpty.0656893d.png\";","module.exports = __webpack_public_path__ + \"static/media/CircledLeafFull.2d6045fb.png\";","module.exports = __webpack_public_path__ + \"static/media/FlowerEmpty.508aaf16.png\";","module.exports = __webpack_public_path__ + \"static/media/FlowerFull.1d5cf613.png\";","module.exports = __webpack_public_path__ + \"static/media/CircledFlowerEmpty.f37a309d.png\";","module.exports = __webpack_public_path__ + \"static/media/CircledFlowerFull.dfd139c0.png\";","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Grid, makeStyles } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport LeafEmpty from './assets/LeafEmpty.png';\r\nimport LeafFull from './assets/LeafFull.png';\r\nimport CircledLeafEmpty from './assets/CircledLeafEmpty.png';\r\nimport CircledLeafFull from './assets/CircledLeafFull.png';\r\nimport FlowerEmpty from './assets/FlowerEmpty.png';\r\nimport FlowerFull from './assets/FlowerFull.png';\r\nimport CircledFlowerEmpty from './assets/CircledFlowerEmpty.png';\r\nimport CircledFlowerFull from './assets/CircledFlowerFull.png';\r\n\r\nconst symbolMap = {\r\n  // [flower?, full?, ring?]\r\n  \"0,0,0\": LeafEmpty,\r\n  \"0,1,0\": LeafFull,\r\n  \"0,0,1\": CircledLeafEmpty,\r\n  \"0,1,1\": CircledLeafFull,\r\n  \"1,0,0\": FlowerEmpty,\r\n  \"1,1,0\": FlowerFull,\r\n  \"1,0,1\": CircledFlowerEmpty,\r\n  \"1,1,1\": CircledFlowerFull,\r\n};\r\n\r\nfunction k_combinations(set, k) {\r\n  let i, j, combs, head, tailcombs;\r\n\r\n  if (k > set.length || k <= 0) {\r\n    return [];\r\n  }\r\n\r\n  // K-sized set has only one K-sized subset.\r\n  if (k === set.length) {\r\n    return [set];\r\n  }\r\n\r\n  // There is N 1-sized subsets in a N-sized set.\r\n  if (k === 1) {\r\n    combs = [];\r\n    for (let i = 0; i < set.length; i++) {\r\n      combs.push([set[i]]);\r\n    }\r\n    return combs;\r\n  }\r\n\r\n  combs = [];\r\n  for (i = 0; i < set.length - k + 1; i++) {\r\n    head = set.slice(i, i + 1);\r\n    tailcombs = k_combinations(set.slice(i + 1), k - 1);\r\n    for (j = 0; j < tailcombs.length; j++) {\r\n      combs.push(head.concat(tailcombs[j]));\r\n    }\r\n  }\r\n  return combs;\r\n}\r\n\r\nlet validCombinations = [];\r\nk_combinations(Object.keys(symbolMap), 4).forEach(combGroup => {\r\n  const combSet = combGroup.map(comb => comb.split(\",\").map(attrStr => Number(attrStr)));\r\n  let candidateIndex = -1;\r\n  let candidates = 0;\r\n  for (let attrIndex = 0; attrIndex < combSet[0].length; attrIndex++) {\r\n    const attrCol = combSet.map(comb => comb[attrIndex]);\r\n    const attrSum = attrCol.reduce((sum, attrVal) => sum + attrVal, 0);\r\n    if (attrSum === 1) {\r\n      // find the index that has 1 as attrVal\r\n      candidateIndex = attrCol.findIndex(attrVal => attrVal === 1);\r\n      candidates++;\r\n    } else if (attrSum === attrCol.length - 1) {\r\n      // find the index that has 0 as attrVal\r\n      candidateIndex = attrCol.findIndex(attrVal => attrVal === 0);\r\n      candidates++;\r\n    }\r\n  }\r\n\r\n  if (candidates === 1 && candidateIndex !== -1) {\r\n    validCombinations.push({\r\n      combination: combSet.map(comb => ({ data: comb, img: symbolMap[comb] })),\r\n      uniqueIndex: candidateIndex,\r\n    });\r\n  }\r\n});\r\n\r\nconst Status = {\r\n  CORRECT: {\r\n    msg: \"Correct!\",\r\n  },\r\n  WRONG: {\r\n    msg: \"Wrong symbol\",\r\n  },\r\n  DEFAULT: {\r\n    msg: \"Find the odd one out!\",\r\n  },\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: {\r\n    margin: \"auto\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  symbolContainer: {\r\n    display: \"flex\",\r\n    width: 300,\r\n    height: 300,\r\n    minWidth: 300,\r\n    minHeight: 300,\r\n    borderRadius: \"50%\",\r\n    cursor: \"pointer\",\r\n  },\r\n  score: {\r\n    color: \"#dedede\",\r\n  },\r\n  highlightScale: {\r\n    \"&:hover\": {\r\n      transform: \"scale(1.1)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst MistSymbol = (props) => {\r\n  const { classes, src, onClick, withMist } = props;\r\n  const [hovered, setHovered] = useState(false);\r\n  return (\r\n    <Box className={classes.symbolContainer}\r\n      bgcolor={withMist && !hovered ? \"#bbdefb\" : \"inherit\"}\r\n      onClick={onClick}\r\n      onMouseEnter={() => setHovered(true)}\r\n      onMouseLeave={() => setHovered(false)}\r\n    >\r\n      <img src={src} alt=\"mists_symbol\"\r\n        className={`${classes.img} ${!withMist ? classes.highlightScale : null}`}\r\n        hidden={withMist && !hovered}\r\n      />\r\n    </Box>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [randomCombinationSet, setRandomCombinationSet] = useState();\r\n  const [score, setScore] = useState(0);\r\n  const [status, setStatus] = useState(Status.DEFAULT);\r\n  const [withMist, setWithMist] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setRandomCombinationSet(validCombinations[Math.floor(Math.random() * validCombinations.length)]);\r\n  }, [score]);\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setStatus(Status.DEFAULT);\r\n    }, 2000);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [status]);\r\n\r\n  const handleClick = (index) => {\r\n    if (index === randomCombinationSet.uniqueIndex) {\r\n      setScore(score + 1);\r\n      setStatus(Status.CORRECT);\r\n    } else {\r\n      setScore(0);\r\n      setStatus(Status.WRONG);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" p={4} style={{ backgroundColor: \"#1e1e1e\" }}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        {randomCombinationSet && randomCombinationSet.combination.map((symbol, index) => (\r\n          <Grid item key={index}>\r\n            <MistSymbol src={symbol.img} withMist={withMist} onClick={() => handleClick(index)} classes={classes} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" width={400} m=\"40px auto\">\r\n        {status === Status.CORRECT && <Alert severity=\"success\">{Status.CORRECT.msg}</Alert>}\r\n        {status === Status.WRONG && <Alert severity=\"error\">{Status.WRONG.msg}</Alert>}\r\n        {status === Status.DEFAULT && <Alert severity=\"info\">{Status.DEFAULT.msg}</Alert>}\r\n      </Box>\r\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" color=\"#f2f2f2\">\r\n        <Typography className={classes.score} variant=\"h4\">{`Score: ${score}`}</Typography>\r\n        <FormGroup row>\r\n          <FormControlLabel\r\n            label=\"Toggle mist\"\r\n            control={<Switch checked={withMist} onChange={() => setWithMist(!withMist)} />}\r\n          />\r\n        </FormGroup>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}